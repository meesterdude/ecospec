#!/usr/bin/env ruby

require 'yaml'
require 'optparse'

@options = {}
OptionParser.new do |opt|
  opt.on('--debug') { |o| @options[:debug] = o }
end.parse!

changed = `git diff  main --name-only`

@ignored = []

def run(files)
  output = []
  require 'pry'

  files.split(" ").each do |f|
    binding.pry
    if ignore.find{|pattern| f.match?(Regexp.new(pattern))}
      puts "ignoring"
      @ignored << "ignoring #{f}"
      next
    end
    next if output.size == all_spec_files.size
    addition = nil
    if f.start_with?("app/")
      spec_file = f.gsub('app/', 'spec/').gsub(".rb", "_spec.rb")
      addition =  spec_file if all_spec_files.include?(spec_file)
    elsif f.start_with?("spec/")
      addition = f if all_spec_files.include?(f)
    end
    # if not ignored, and no specs added around this, test everything
    output |= [addition] || all_spec_files 
    found = definitions.select{|k,_| f.match?(Regexp.new(k))}
    found.each do |key, config|
      next if config.nil?
      next unless config["include_specs"]
      config["include_specs"].each do |spec_regex|
        output |= all_spec_files.select{|f| f.match?(Regexp.new(spec_regex))}
      end
    end
  end
  output
end

def yaml
  @yaml ||= YAML.load_file("config/ecospec.yml")
end

def definitions
  yaml["definitions"]
end

def ignore
  yaml["ignore"]
end

def all_spec_files
  @all_spec_files ||= `find spec -print | grep _spec.rb`.split()
end

ran = run(changed)

if ran.empty?
  puts "-t skipeverything"
else
  puts ran.uniq.join(' ')
  count = "#{ran.size}/#{all_spec_files.size}"
  percent = 100 - ((ran.size.to_f/all_spec_files.size)*100).round(1)
  @ignored.each{|i| STDERR.puts i }
  STDERR.puts "running #{count} specs (#{percent}% reduction in specs ran)"

end